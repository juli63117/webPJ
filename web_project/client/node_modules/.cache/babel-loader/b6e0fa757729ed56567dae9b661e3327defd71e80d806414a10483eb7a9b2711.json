{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3001/api';\nexport const getOrdersByUser = async currentUser => {\n  try {\n    if (!currentUser) {\n      throw new Error('Пользователь не авторизован');\n    }\n    //const response = await axios.get(`${API_URL}/ordertables`, {currentUser});\n    const response = await axios.get(`${API_URL}/ordertables`, {\n      params: {\n        currentUser\n      }\n    });\n    return response;\n  } catch (error) {\n    console.error('Error fetching orders:', error.message);\n    throw error;\n  }\n};\nexport const login = async (username, password) => {\n  // Добавляем параметры\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      username,\n      password\n    });\n    if (response.status === 200) {\n      localStorage.setItem('currentUser', username); // Сохраняем имя в localStorage\n    }\n    return response;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getOrdersByUser","currentUser","Error","response","get","params","error","console","message","login","username","password","post","status","localStorage","setItem"],"sources":["C:/Users/teply/OneDrive/Рабочий стол/web_project/client/src/components/pages/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3001/api'; \r\n\r\nexport const getOrdersByUser = async (currentUser) => {\r\n  try {\r\n    if (!currentUser) {\r\n      throw new Error('Пользователь не авторизован');\r\n    }\r\n    //const response = await axios.get(`${API_URL}/ordertables`, {currentUser});\r\n    const response = await axios.get(`${API_URL}/ordertables`, { params: { currentUser } });\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error fetching orders:', error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const login = async (username, password) => { // Добавляем параметры\r\n  try {\r\n    const response = await axios.post(`${API_URL}/login`, {\r\n      username,\r\n      password\r\n    });\r\n    if (response.status === 200) {\r\n      localStorage.setItem('currentUser', username); // Сохраняем имя в localStorage\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,eAAe,GAAG,MAAOC,WAAW,IAAK;EACpD,IAAI;IACF,IAAI,CAACA,WAAW,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,GAAEL,OAAQ,cAAa,EAAE;MAAEM,MAAM,EAAE;QAAEJ;MAAY;IAAE,CAAC,CAAC;IACvF,OAAOE,QAAQ;EACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACtD,MAAMF,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAAE;EACnD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAML,KAAK,CAACc,IAAI,CAAE,GAAEb,OAAQ,QAAO,EAAE;MACpDW,QAAQ;MACRC;IACF,CAAC,CAAC;IACF,IAAIR,QAAQ,CAACU,MAAM,KAAK,GAAG,EAAE;MAC3BC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEL,QAAQ,CAAC,CAAC,CAAC;IACjD;IACA,OAAOP,QAAQ;EACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}