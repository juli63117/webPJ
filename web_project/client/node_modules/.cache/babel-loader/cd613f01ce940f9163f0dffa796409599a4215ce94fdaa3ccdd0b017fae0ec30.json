{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3001/api';\nexport const getOrdersByUser = async username => {\n  try {\n    if (!username) {\n      throw new Error('Пользователь не авторизован');\n    }\n    const response = await axios.get(`${API_URL}/ordertables/${username}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching orders:', error);\n    throw error;\n  }\n};\nexport const login = async (username, password) => {\n  // Добавляем параметры\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      username,\n      password\n    });\n    if (response.status === 200) {\n      localStorage.setItem('username', username); // Сохраняем имя в localStorage\n    }\n    return response;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getOrdersByUser","username","Error","response","get","data","error","console","login","password","post","status","localStorage","setItem"],"sources":["C:/Users/teply/OneDrive/Рабочий стол/web_project/client/src/components/pages/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3001/api'; \r\n\r\nexport const getOrdersByUser = async (username) => { \r\n  try {\r\n      if (!username) {\r\n          throw new Error('Пользователь не авторизован');\r\n      }\r\n      const response = await axios.get(`${API_URL}/ordertables/${username}`);\r\n      return response.data;\r\n  } catch (error) {\r\n      console.error('Error fetching orders:', error);\r\n      throw error;\r\n  }\r\n};\r\n\r\nexport const login = async (username, password) => { // Добавляем параметры\r\n  try {\r\n    const response = await axios.post(`${API_URL}/login`, {\r\n      username,\r\n      password\r\n    });\r\n    if (response.status === 200) {\r\n      localStorage.setItem('username', username); // Сохраняем имя в localStorage\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,eAAe,GAAG,MAAOC,QAAQ,IAAK;EACjD,IAAI;IACA,IAAI,CAACA,QAAQ,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,GAAEL,OAAQ,gBAAeE,QAAS,EAAC,CAAC;IACtE,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACf;AACF,CAAC;AAED,OAAO,MAAME,KAAK,GAAG,MAAAA,CAAOP,QAAQ,EAAEQ,QAAQ,KAAK;EAAE;EACnD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAML,KAAK,CAACY,IAAI,CAAE,GAAEX,OAAQ,QAAO,EAAE;MACpDE,QAAQ;MACRQ;IACF,CAAC,CAAC;IACF,IAAIN,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;MAC3BC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEZ,QAAQ,CAAC,CAAC,CAAC;IAC9C;IACA,OAAOE,QAAQ;EACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}