{"ast":null,"code":"\"use strict\";\n\nconst _ = require(\"lodash\");\nconst AbstractDialect = require(\"../abstract\");\nconst ConnectionManager = require(\"./connection-manager\");\nconst Query = require(\"./query\");\nconst QueryGenerator = require(\"./query-generator\");\nconst DataTypes = require(\"../../data-types\").mssql;\nconst {\n  MSSqlQueryInterface\n} = require(\"./query-interface\");\nclass MssqlDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new MSSqlQueryInterface(sequelize, this.queryGenerator);\n  }\n}\nMssqlDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  DEFAULT: true,\n  \"DEFAULT VALUES\": true,\n  \"LIMIT ON UPDATE\": true,\n  \"ORDER NULLS\": false,\n  lock: false,\n  transactions: true,\n  migrations: false,\n  returnValues: {\n    output: true\n  },\n  schemas: true,\n  autoIncrement: {\n    identityInsert: true,\n    defaultValue: false,\n    update: false\n  },\n  constraints: {\n    restrict: false,\n    default: true\n  },\n  index: {\n    collate: false,\n    length: false,\n    parser: false,\n    type: true,\n    using: false,\n    where: true\n  },\n  NUMERIC: true,\n  tmpTableTrigger: true\n});\nMssqlDialect.prototype.defaultVersion = \"12.0.2000\";\nMssqlDialect.prototype.Query = Query;\nMssqlDialect.prototype.name = \"mssql\";\nMssqlDialect.prototype.TICK_CHAR = '\"';\nMssqlDialect.prototype.TICK_CHAR_LEFT = \"[\";\nMssqlDialect.prototype.TICK_CHAR_RIGHT = \"]\";\nMssqlDialect.prototype.DataTypes = DataTypes;\nmodule.exports = MssqlDialect;","map":{"version":3,"names":["_","require","AbstractDialect","ConnectionManager","Query","QueryGenerator","DataTypes","mssql","MSSqlQueryInterface","MssqlDialect","constructor","sequelize","connectionManager","queryGenerator","_dialect","queryInterface","prototype","supports","merge","cloneDeep","DEFAULT","lock","transactions","migrations","returnValues","output","schemas","autoIncrement","identityInsert","defaultValue","update","constraints","restrict","default","index","collate","length","parser","type","using","where","NUMERIC","tmpTableTrigger","defaultVersion","name","TICK_CHAR","TICK_CHAR_LEFT","TICK_CHAR_RIGHT","module","exports"],"sources":["C:\\Users\\teply\\OneDrive\\Рабочий стол\\web_project\\client\\node_modules\\sequelize\\src\\dialects\\mssql\\index.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractDialect = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst DataTypes = require('../../data-types').mssql;\nconst { MSSqlQueryInterface } = require('./query-interface');\n\nclass MssqlDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new MSSqlQueryInterface(\n      sequelize,\n      this.queryGenerator\n    );\n  }\n}\n\nMssqlDialect.prototype.supports = _.merge(\n  _.cloneDeep(AbstractDialect.prototype.supports),\n  {\n    DEFAULT: true,\n    'DEFAULT VALUES': true,\n    'LIMIT ON UPDATE': true,\n    'ORDER NULLS': false,\n    lock: false,\n    transactions: true,\n    migrations: false,\n    returnValues: {\n      output: true\n    },\n    schemas: true,\n    autoIncrement: {\n      identityInsert: true,\n      defaultValue: false,\n      update: false\n    },\n    constraints: {\n      restrict: false,\n      default: true\n    },\n    index: {\n      collate: false,\n      length: false,\n      parser: false,\n      type: true,\n      using: false,\n      where: true\n    },\n    NUMERIC: true,\n    tmpTableTrigger: true\n  }\n);\n\nMssqlDialect.prototype.defaultVersion = '12.0.2000'; // SQL Server 2014 Express, minimum supported version\nMssqlDialect.prototype.Query = Query;\nMssqlDialect.prototype.name = 'mssql';\nMssqlDialect.prototype.TICK_CHAR = '\"';\nMssqlDialect.prototype.TICK_CHAR_LEFT = '[';\nMssqlDialect.prototype.TICK_CHAR_RIGHT = ']';\nMssqlDialect.prototype.DataTypes = DataTypes;\n\nmodule.exports = MssqlDialect;\n"],"mappings":";;AAEA,MAAMA,CAAA,GAAIC,OAAA,CAAQ;AAClB,MAAMC,eAAA,GAAkBD,OAAA,CAAQ;AAChC,MAAME,iBAAA,GAAoBF,OAAA,CAAQ;AAClC,MAAMG,KAAA,GAAQH,OAAA,CAAQ;AACtB,MAAMI,cAAA,GAAiBJ,OAAA,CAAQ;AAC/B,MAAMK,SAAA,GAAYL,OAAA,CAAQ,oBAAoBM,KAAA;AAC9C,MAAM;EAAEC;AAAA,IAAwBP,OAAA,CAAQ;AAExC,MAAAQ,YAAA,SAA2BP,eAAA,CAAgB;EACzCQ,YAAYC,SAAA,EAAW;IACrB;IACA,KAAKA,SAAA,GAAYA,SAAA;IACjB,KAAKC,iBAAA,GAAoB,IAAIT,iBAAA,CAAkB,MAAMQ,SAAA;IACrD,KAAKE,cAAA,GAAiB,IAAIR,cAAA,CAAe;MACvCS,QAAA,EAAU;MACVH;IAAA;IAEF,KAAKI,cAAA,GAAiB,IAAIP,mBAAA,CACxBG,SAAA,EACA,KAAKE,cAAA;EAAA;AAAA;AAKXJ,YAAA,CAAaO,SAAA,CAAUC,QAAA,GAAWjB,CAAA,CAAEkB,KAAA,CAClClB,CAAA,CAAEmB,SAAA,CAAUjB,eAAA,CAAgBc,SAAA,CAAUC,QAAA,GACtC;EACEG,OAAA,EAAS;EACT,kBAAkB;EAClB,mBAAmB;EACnB,eAAe;EACfC,IAAA,EAAM;EACNC,YAAA,EAAc;EACdC,UAAA,EAAY;EACZC,YAAA,EAAc;IACZC,MAAA,EAAQ;EAAA;EAEVC,OAAA,EAAS;EACTC,aAAA,EAAe;IACbC,cAAA,EAAgB;IAChBC,YAAA,EAAc;IACdC,MAAA,EAAQ;EAAA;EAEVC,WAAA,EAAa;IACXC,QAAA,EAAU;IACVC,OAAA,EAAS;EAAA;EAEXC,KAAA,EAAO;IACLC,OAAA,EAAS;IACTC,MAAA,EAAQ;IACRC,MAAA,EAAQ;IACRC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPC,KAAA,EAAO;EAAA;EAETC,OAAA,EAAS;EACTC,eAAA,EAAiB;AAAA;AAIrBjC,YAAA,CAAaO,SAAA,CAAU2B,cAAA,GAAiB;AACxClC,YAAA,CAAaO,SAAA,CAAUZ,KAAA,GAAQA,KAAA;AAC/BK,YAAA,CAAaO,SAAA,CAAU4B,IAAA,GAAO;AAC9BnC,YAAA,CAAaO,SAAA,CAAU6B,SAAA,GAAY;AACnCpC,YAAA,CAAaO,SAAA,CAAU8B,cAAA,GAAiB;AACxCrC,YAAA,CAAaO,SAAA,CAAU+B,eAAA,GAAkB;AACzCtC,YAAA,CAAaO,SAAA,CAAUV,SAAA,GAAYA,SAAA;AAEnC0C,MAAA,CAAOC,OAAA,GAAUxC,YAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}