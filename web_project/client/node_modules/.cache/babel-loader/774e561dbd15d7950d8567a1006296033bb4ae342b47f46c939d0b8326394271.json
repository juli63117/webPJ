{"ast":null,"code":"\"use strict\";\n\nconst _ = require(\"lodash\");\nconst AbstractDialect = require(\"../abstract\");\nconst ConnectionManager = require(\"./connection-manager\");\nconst Query = require(\"./query\");\nconst QueryGenerator = require(\"./query-generator\");\nconst {\n  MySQLQueryInterface\n} = require(\"../mysql/query-interface\");\nconst DataTypes = require(\"../../data-types\").mariadb;\nclass MariadbDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new MySQLQueryInterface(sequelize, this.queryGenerator);\n  }\n  canBackslashEscape() {\n    return true;\n  }\n}\nMariadbDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  \"VALUES ()\": true,\n  \"LIMIT ON UPDATE\": true,\n  lock: true,\n  forShare: \"LOCK IN SHARE MODE\",\n  settingIsolationLevelDuringTransaction: false,\n  schemas: true,\n  inserts: {\n    ignoreDuplicates: \" IGNORE\",\n    updateOnDuplicate: \" ON DUPLICATE KEY UPDATE\"\n  },\n  index: {\n    collate: false,\n    length: true,\n    parser: true,\n    type: true,\n    using: 1\n  },\n  constraints: {\n    dropConstraint: false,\n    check: false\n  },\n  indexViaAlter: true,\n  indexHints: true,\n  NUMERIC: true,\n  GEOMETRY: true,\n  JSON: true,\n  REGEXP: true\n});\nMariadbDialect.prototype.defaultVersion = \"10.1.44\";\nMariadbDialect.prototype.Query = Query;\nMariadbDialect.prototype.QueryGenerator = QueryGenerator;\nMariadbDialect.prototype.DataTypes = DataTypes;\nMariadbDialect.prototype.name = \"mariadb\";\nMariadbDialect.prototype.TICK_CHAR = \"`\";\nMariadbDialect.prototype.TICK_CHAR_LEFT = MariadbDialect.prototype.TICK_CHAR;\nMariadbDialect.prototype.TICK_CHAR_RIGHT = MariadbDialect.prototype.TICK_CHAR;\nmodule.exports = MariadbDialect;","map":{"version":3,"names":["_","require","AbstractDialect","ConnectionManager","Query","QueryGenerator","MySQLQueryInterface","DataTypes","mariadb","MariadbDialect","constructor","sequelize","connectionManager","queryGenerator","_dialect","queryInterface","canBackslashEscape","prototype","supports","merge","cloneDeep","lock","forShare","settingIsolationLevelDuringTransaction","schemas","inserts","ignoreDuplicates","updateOnDuplicate","index","collate","length","parser","type","using","constraints","dropConstraint","check","indexViaAlter","indexHints","NUMERIC","GEOMETRY","JSON","REGEXP","defaultVersion","name","TICK_CHAR","TICK_CHAR_LEFT","TICK_CHAR_RIGHT","module","exports"],"sources":["C:\\Users\\teply\\OneDrive\\Рабочий стол\\web_project\\client\\node_modules\\sequelize\\src\\dialects\\mariadb\\index.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractDialect = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst { MySQLQueryInterface } = require('../mysql/query-interface');\nconst DataTypes = require('../../data-types').mariadb;\n\nclass MariadbDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new MySQLQueryInterface(\n      sequelize,\n      this.queryGenerator\n    );\n  }\n\n  canBackslashEscape() {\n    return true;\n  }\n}\n\nMariadbDialect.prototype.supports = _.merge(\n  _.cloneDeep(AbstractDialect.prototype.supports),\n  {\n    'VALUES ()': true,\n    'LIMIT ON UPDATE': true,\n    lock: true,\n    forShare: 'LOCK IN SHARE MODE',\n    settingIsolationLevelDuringTransaction: false,\n    schemas: true,\n    inserts: {\n      ignoreDuplicates: ' IGNORE',\n      updateOnDuplicate: ' ON DUPLICATE KEY UPDATE'\n    },\n    index: {\n      collate: false,\n      length: true,\n      parser: true,\n      type: true,\n      using: 1\n    },\n    constraints: {\n      dropConstraint: false,\n      check: false\n    },\n    indexViaAlter: true,\n    indexHints: true,\n    NUMERIC: true,\n    GEOMETRY: true,\n    JSON: true,\n    REGEXP: true\n  }\n);\n\nMariadbDialect.prototype.defaultVersion = '10.1.44'; // minimum supported version\nMariadbDialect.prototype.Query = Query;\nMariadbDialect.prototype.QueryGenerator = QueryGenerator;\nMariadbDialect.prototype.DataTypes = DataTypes;\nMariadbDialect.prototype.name = 'mariadb';\nMariadbDialect.prototype.TICK_CHAR = '`';\nMariadbDialect.prototype.TICK_CHAR_LEFT = MariadbDialect.prototype.TICK_CHAR;\nMariadbDialect.prototype.TICK_CHAR_RIGHT = MariadbDialect.prototype.TICK_CHAR;\n\nmodule.exports = MariadbDialect;\n"],"mappings":";;AAEA,MAAMA,CAAA,GAAIC,OAAA,CAAQ;AAClB,MAAMC,eAAA,GAAkBD,OAAA,CAAQ;AAChC,MAAME,iBAAA,GAAoBF,OAAA,CAAQ;AAClC,MAAMG,KAAA,GAAQH,OAAA,CAAQ;AACtB,MAAMI,cAAA,GAAiBJ,OAAA,CAAQ;AAC/B,MAAM;EAAEK;AAAA,IAAwBL,OAAA,CAAQ;AACxC,MAAMM,SAAA,GAAYN,OAAA,CAAQ,oBAAoBO,OAAA;AAE9C,MAAAC,cAAA,SAA6BP,eAAA,CAAgB;EAC3CQ,YAAYC,SAAA,EAAW;IACrB;IACA,KAAKA,SAAA,GAAYA,SAAA;IACjB,KAAKC,iBAAA,GAAoB,IAAIT,iBAAA,CAAkB,MAAMQ,SAAA;IACrD,KAAKE,cAAA,GAAiB,IAAIR,cAAA,CAAe;MACvCS,QAAA,EAAU;MACVH;IAAA;IAEF,KAAKI,cAAA,GAAiB,IAAIT,mBAAA,CACxBK,SAAA,EACA,KAAKE,cAAA;EAAA;EAITG,mBAAA,EAAqB;IACnB,OAAO;EAAA;AAAA;AAIXP,cAAA,CAAeQ,SAAA,CAAUC,QAAA,GAAWlB,CAAA,CAAEmB,KAAA,CACpCnB,CAAA,CAAEoB,SAAA,CAAUlB,eAAA,CAAgBe,SAAA,CAAUC,QAAA,GACtC;EACE,aAAa;EACb,mBAAmB;EACnBG,IAAA,EAAM;EACNC,QAAA,EAAU;EACVC,sCAAA,EAAwC;EACxCC,OAAA,EAAS;EACTC,OAAA,EAAS;IACPC,gBAAA,EAAkB;IAClBC,iBAAA,EAAmB;EAAA;EAErBC,KAAA,EAAO;IACLC,OAAA,EAAS;IACTC,MAAA,EAAQ;IACRC,MAAA,EAAQ;IACRC,IAAA,EAAM;IACNC,KAAA,EAAO;EAAA;EAETC,WAAA,EAAa;IACXC,cAAA,EAAgB;IAChBC,KAAA,EAAO;EAAA;EAETC,aAAA,EAAe;EACfC,UAAA,EAAY;EACZC,OAAA,EAAS;EACTC,QAAA,EAAU;EACVC,IAAA,EAAM;EACNC,MAAA,EAAQ;AAAA;AAIZjC,cAAA,CAAeQ,SAAA,CAAU0B,cAAA,GAAiB;AAC1ClC,cAAA,CAAeQ,SAAA,CAAUb,KAAA,GAAQA,KAAA;AACjCK,cAAA,CAAeQ,SAAA,CAAUZ,cAAA,GAAiBA,cAAA;AAC1CI,cAAA,CAAeQ,SAAA,CAAUV,SAAA,GAAYA,SAAA;AACrCE,cAAA,CAAeQ,SAAA,CAAU2B,IAAA,GAAO;AAChCnC,cAAA,CAAeQ,SAAA,CAAU4B,SAAA,GAAY;AACrCpC,cAAA,CAAeQ,SAAA,CAAU6B,cAAA,GAAiBrC,cAAA,CAAeQ,SAAA,CAAU4B,SAAA;AACnEpC,cAAA,CAAeQ,SAAA,CAAU8B,eAAA,GAAkBtC,cAAA,CAAeQ,SAAA,CAAU4B,SAAA;AAEpEG,MAAA,CAAOC,OAAA,GAAUxC,cAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}