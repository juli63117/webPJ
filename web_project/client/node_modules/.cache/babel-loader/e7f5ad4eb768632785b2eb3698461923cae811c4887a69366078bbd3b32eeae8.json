{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Pool = void 0;\nconst Deferred_1 = require(\"./Deferred\");\nconst AggregateError_1 = require(\"./AggregateError\");\nclass Pool {\n  constructor(factory) {\n    this.log = false;\n    if (!factory.create) {\n      throw new Error('create function is required');\n    }\n    if (!factory.destroy) {\n      throw new Error('destroy function is required');\n    }\n    if (!factory.validate) {\n      throw new Error('validate function is required');\n    }\n    if (typeof factory.min !== 'number' || factory.min < 0 || factory.min !== Math.round(factory.min)) {\n      throw new Error('min must be an integer >= 0');\n    }\n    if (typeof factory.max !== 'number' || factory.max <= 0 || factory.max !== Math.round(factory.max)) {\n      throw new Error('max must be an integer > 0');\n    }\n    if (factory.min > factory.max) {\n      throw new Error('max is smaller than min');\n    }\n    if (factory.maxUses !== undefined && (typeof factory.maxUses !== 'number' || factory.maxUses < 0)) {\n      throw new Error('maxUses must be an integer >= 0');\n    }\n    this.idleTimeoutMillis = factory.idleTimeoutMillis || 30000;\n    this.acquireTimeoutMillis = factory.acquireTimeoutMillis || 30000;\n    this.reapIntervalMillis = factory.reapIntervalMillis || 1000;\n    this.maxUsesPerResource = factory.maxUses || Infinity;\n    this.log = factory.log || false;\n    this._factory = factory;\n    this._count = 0;\n    this._draining = false;\n    this._pendingAcquires = [];\n    this._inUseObjects = [];\n    this._availableObjects = [];\n    this._removeIdleScheduled = false;\n  }\n  get size() {\n    return this._count;\n  }\n  get name() {\n    return this._factory.name;\n  }\n  get available() {\n    return this._availableObjects.length;\n  }\n  get using() {\n    return this._inUseObjects.length;\n  }\n  get waiting() {\n    return this._pendingAcquires.length;\n  }\n  get maxSize() {\n    return this._factory.max;\n  }\n  get minSize() {\n    return this._factory.min;\n  }\n  _log(message, level) {\n    if (typeof this.log === 'function') {\n      this.log(message, level);\n    } else if (this.log) {\n      console.log(`${level.toUpperCase()} pool ${this.name || ''} - ${message}`);\n    }\n  }\n  _removeIdle() {\n    const toRemove = [];\n    const now = Date.now();\n    let i;\n    let available = this._availableObjects.length;\n    const maxRemovable = this.size - this.minSize;\n    let timeout;\n    this._removeIdleScheduled = false;\n    for (i = 0; i < available && maxRemovable > toRemove.length; i++) {\n      timeout = this._availableObjects[i].timeout;\n      if (now >= timeout) {\n        this._log('removeIdle() destroying obj - now:' + now + ' timeout:' + timeout, 'verbose');\n        toRemove.push(this._availableObjects[i].resource);\n      }\n    }\n    toRemove.forEach(this.destroy, this);\n    available = this._availableObjects.length;\n    if (available > 0) {\n      this._log('this._availableObjects.length=' + available, 'verbose');\n      this._scheduleRemoveIdle();\n    } else {\n      this._log('removeIdle() all objects removed', 'verbose');\n    }\n  }\n  _scheduleRemoveIdle() {\n    if (!this._removeIdleScheduled) {\n      this._removeIdleScheduled = true;\n      this._removeIdleTimer = setTimeout(() => {\n        this._removeIdle();\n      }, this.reapIntervalMillis);\n    }\n  }\n  _dispense() {\n    let wrappedResource = null;\n    const waitingCount = this._pendingAcquires.length;\n    this._log(`dispense() clients=${waitingCount} available=${this._availableObjects.length}`, 'info');\n    if (waitingCount < 1) {\n      return;\n    }\n    while (this._availableObjects.length > 0) {\n      this._log('dispense() - reusing obj', 'verbose');\n      wrappedResource = this._availableObjects[this._availableObjects.length - 1];\n      if (!this._factory.validate(wrappedResource.resource)) {\n        this.destroy(wrappedResource.resource);\n        continue;\n      }\n      this._availableObjects.pop();\n      this._addResourceToInUseObjects(wrappedResource.resource, wrappedResource.useCount);\n      const deferred = this._pendingAcquires.shift();\n      return deferred.resolve(wrappedResource.resource);\n    }\n    if (this.size < this.maxSize) {\n      this._createResource();\n    }\n  }\n  _createResource() {\n    this._count += 1;\n    this._log(`createResource() - creating obj - count=${this.size} min=${this.minSize} max=${this.maxSize}`, 'verbose');\n    this._factory.create().then(resource => {\n      const deferred = this._pendingAcquires.shift();\n      if (deferred) {\n        this._addResourceToInUseObjects(resource, 0);\n        deferred.resolve(resource);\n      } else {\n        this._addResourceToAvailableObjects(resource, 0);\n      }\n    }).catch(error => {\n      const deferred = this._pendingAcquires.shift();\n      this._count -= 1;\n      if (this._count < 0) this._count = 0;\n      if (deferred) {\n        deferred.reject(error);\n      }\n      process.nextTick(() => {\n        this._dispense();\n      });\n    });\n  }\n  _addResourceToAvailableObjects(resource, useCount) {\n    const wrappedResource = {\n      resource: resource,\n      useCount: useCount,\n      timeout: Date.now() + this.idleTimeoutMillis\n    };\n    this._availableObjects.push(wrappedResource);\n    this._dispense();\n    this._scheduleRemoveIdle();\n  }\n  _addResourceToInUseObjects(resource, useCount) {\n    const wrappedResource = {\n      resource: resource,\n      useCount: useCount\n    };\n    this._inUseObjects.push(wrappedResource);\n  }\n  _ensureMinimum() {\n    let i, diff;\n    if (!this._draining && this.size < this.minSize) {\n      diff = this.minSize - this.size;\n      for (i = 0; i < diff; i++) {\n        this._createResource();\n      }\n    }\n  }\n  acquire() {\n    if (this._draining) {\n      return Promise.reject(new Error('pool is draining and cannot accept work'));\n    }\n    const deferred = new Deferred_1.Deferred();\n    deferred.registerTimeout(this.acquireTimeoutMillis, () => {\n      this._pendingAcquires = this._pendingAcquires.filter(pending => pending !== deferred);\n    });\n    this._pendingAcquires.push(deferred);\n    this._dispense();\n    return deferred.promise();\n  }\n  release(resource) {\n    if (this._availableObjects.some(resourceWithTimeout => resourceWithTimeout.resource === resource)) {\n      this._log('release called twice for the same resource: ' + new Error().stack, 'error');\n      return;\n    }\n    const index = this._inUseObjects.findIndex(wrappedResource => wrappedResource.resource === resource);\n    if (index < 0) {\n      this._log('attempt to release an invalid resource: ' + new Error().stack, 'error');\n      return;\n    }\n    const wrappedResource = this._inUseObjects[index];\n    wrappedResource.useCount += 1;\n    if (wrappedResource.useCount >= this.maxUsesPerResource) {\n      this._log('release() destroying obj - useCount:' + wrappedResource.useCount + ' maxUsesPerResource:' + this.maxUsesPerResource, 'verbose');\n      this.destroy(wrappedResource.resource);\n      this._dispense();\n    } else {\n      this._inUseObjects.splice(index, 1);\n      this._addResourceToAvailableObjects(wrappedResource.resource, wrappedResource.useCount);\n    }\n  }\n  async destroy(resource) {\n    const available = this._availableObjects.length;\n    const using = this._inUseObjects.length;\n    this._availableObjects = this._availableObjects.filter(object => object.resource !== resource);\n    this._inUseObjects = this._inUseObjects.filter(object => object.resource !== resource);\n    if (available === this._availableObjects.length && using === this._inUseObjects.length) {\n      this._ensureMinimum();\n      return;\n    }\n    this._count -= 1;\n    if (this._count < 0) this._count = 0;\n    try {\n      await this._factory.destroy(resource);\n    } finally {\n      this._ensureMinimum();\n      if (!this._draining) {\n        process.nextTick(() => {\n          this._dispense();\n        });\n      }\n    }\n  }\n  drain() {\n    this._log('draining', 'info');\n    this._draining = true;\n    const check = callback => {\n      if (this._pendingAcquires.length > 0) {\n        this._dispense();\n        setTimeout(() => {\n          check(callback);\n        }, 100);\n        return;\n      }\n      if (this._availableObjects.length !== this._count) {\n        setTimeout(() => {\n          check(callback);\n        }, 100);\n        return;\n      }\n      callback();\n    };\n    return new Promise(resolve => check(resolve));\n  }\n  async destroyAllNow() {\n    this._log('force destroying all objects', 'info');\n    this._removeIdleScheduled = false;\n    clearTimeout(this._removeIdleTimer);\n    const resources = this._availableObjects.map(resource => resource.resource);\n    const errors = [];\n    for (const resource of resources) {\n      try {\n        await this.destroy(resource);\n      } catch (ex) {\n        this._log('Error destroying resource: ' + ex.stack, 'error');\n        errors.push(ex);\n      }\n    }\n    if (errors.length > 0) {\n      throw new AggregateError_1.AggregateError(errors);\n    }\n  }\n}\nexports.Pool = Pool;","map":{"version":3,"names":["Deferred_1","require","AggregateError_1","Pool","constructor","factory","log","create","Error","destroy","validate","min","Math","round","max","maxUses","undefined","idleTimeoutMillis","acquireTimeoutMillis","reapIntervalMillis","maxUsesPerResource","Infinity","_factory","_count","_draining","_pendingAcquires","_inUseObjects","_availableObjects","_removeIdleScheduled","size","name","available","length","using","waiting","maxSize","minSize","_log","message","level","console","toUpperCase","_removeIdle","toRemove","now","Date","i","maxRemovable","timeout","push","resource","forEach","_scheduleRemoveIdle","_removeIdleTimer","setTimeout","_dispense","wrappedResource","waitingCount","pop","_addResourceToInUseObjects","useCount","deferred","shift","resolve","_createResource","then","_addResourceToAvailableObjects","catch","error","reject","process","nextTick","_ensureMinimum","diff","acquire","Promise","Deferred","registerTimeout","filter","pending","promise","release","some","resourceWithTimeout","stack","index","findIndex","splice","object","drain","check","callback","destroyAllNow","clearTimeout","resources","map","errors","ex","AggregateError","exports"],"sources":["../src/Pool.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,UAAA,GAAAC,OAAA;AACA,MAAAC,gBAAA,GAAAD,OAAA;AAqGA,MAAaE,IAAI;EAuBfC,YAAYC,OAAoC;IAftC,KAAAC,GAAG,GAA4B,KAAK;IAgB5C,IAAI,CAACD,OAAO,CAACE,MAAM,EAAE;MACnB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;;IAGhD,IAAI,CAACH,OAAO,CAACI,OAAO,EAAE;MACpB,MAAM,IAAID,KAAK,CAAC,8BAA8B,CAAC;;IAGjD,IAAI,CAACH,OAAO,CAACK,QAAQ,EAAE;MACrB,MAAM,IAAIF,KAAK,CAAC,+BAA+B,CAAC;;IAGlD,IACE,OAAOH,OAAO,CAACM,GAAG,KAAK,QAAQ,IAC/BN,OAAO,CAACM,GAAG,GAAG,CAAC,IACfN,OAAO,CAACM,GAAG,KAAKC,IAAI,CAACC,KAAK,CAACR,OAAO,CAACM,GAAG,CAAC,EACvC;MACA,MAAM,IAAIH,KAAK,CAAC,6BAA6B,CAAC;;IAGhD,IACE,OAAOH,OAAO,CAACS,GAAG,KAAK,QAAQ,IAC/BT,OAAO,CAACS,GAAG,IAAI,CAAC,IAChBT,OAAO,CAACS,GAAG,KAAKF,IAAI,CAACC,KAAK,CAACR,OAAO,CAACS,GAAG,CAAC,EACvC;MACA,MAAM,IAAIN,KAAK,CAAC,4BAA4B,CAAC;;IAG/C,IAAIH,OAAO,CAACM,GAAG,GAAGN,OAAO,CAACS,GAAG,EAAE;MAC7B,MAAM,IAAIN,KAAK,CAAC,yBAAyB,CAAC;;IAG5C,IACEH,OAAO,CAACU,OAAO,KAAKC,SAAS,KAC5B,OAAOX,OAAO,CAACU,OAAO,KAAK,QAAQ,IAAIV,OAAO,CAACU,OAAO,GAAG,CAAC,CAAC,EAC5D;MACA,MAAM,IAAIP,KAAK,CAAC,iCAAiC,CAAC;;IAIpD,IAAI,CAACS,iBAAiB,GAAGZ,OAAO,CAACY,iBAAiB,IAAI,KAAK;IAC3D,IAAI,CAACC,oBAAoB,GAAGb,OAAO,CAACa,oBAAoB,IAAI,KAAK;IACjE,IAAI,CAACC,kBAAkB,GAAGd,OAAO,CAACc,kBAAkB,IAAI,IAAI;IAC5D,IAAI,CAACC,kBAAkB,GAAGf,OAAO,CAACU,OAAO,IAAIM,QAAQ;IACrD,IAAI,CAACf,GAAG,GAAGD,OAAO,CAACC,GAAG,IAAI,KAAK;IAE/B,IAAI,CAACgB,QAAQ,GAAGjB,OAAO;IACvB,IAAI,CAACkB,MAAM,GAAG,CAAC;IACf,IAAI,CAACC,SAAS,GAAG,KAAK;IAGtB,IAAI,CAACC,gBAAgB,GAAG,EAAE;IAC1B,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,iBAAiB,GAAG,EAAE;IAG3B,IAAI,CAACC,oBAAoB,GAAG,KAAK;EACnC;EAMA,IAAIC,IAAIA,CAAA;IACN,OAAO,IAAI,CAACN,MAAM;EACpB;EAKA,IAAIO,IAAIA,CAAA;IACN,OAAO,IAAI,CAACR,QAAQ,CAACQ,IAAI;EAC3B;EAKA,IAAIC,SAASA,CAAA;IACX,OAAO,IAAI,CAACJ,iBAAiB,CAACK,MAAM;EACtC;EAKA,IAAIC,KAAKA,CAAA;IACP,OAAO,IAAI,CAACP,aAAa,CAACM,MAAM;EAClC;EAKA,IAAIE,OAAOA,CAAA;IACT,OAAO,IAAI,CAACT,gBAAgB,CAACO,MAAM;EACrC;EAKA,IAAIG,OAAOA,CAAA;IACT,OAAO,IAAI,CAACb,QAAQ,CAACR,GAAG;EAC1B;EAKA,IAAIsB,OAAOA,CAAA;IACT,OAAO,IAAI,CAACd,QAAQ,CAACX,GAAG;EAC1B;EAKU0B,IAAIA,CAACC,OAAe,EAAEC,KAAe;IAC7C,IAAI,OAAO,IAAI,CAACjC,GAAG,KAAK,UAAU,EAAE;MAClC,IAAI,CAACA,GAAG,CAACgC,OAAO,EAAEC,KAAK,CAAC;KACzB,MAAM,IAAI,IAAI,CAACjC,GAAG,EAAE;MACnBkC,OAAO,CAAClC,GAAG,CACT,GAAGiC,KAAK,CAACE,WAAW,EAAE,SAAS,IAAI,CAACX,IAAI,IAAI,EAAE,MAAMQ,OAAO,EAAE,CAC9D;;EAEL;EAKUI,WAAWA,CAAA;IACnB,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,EAAE;IACtB,IAAIE,CAAC;IACL,IAAIf,SAAS,GAAG,IAAI,CAACJ,iBAAiB,CAACK,MAAM;IAC7C,MAAMe,YAAY,GAAG,IAAI,CAAClB,IAAI,GAAG,IAAI,CAACO,OAAO;IAC7C,IAAIY,OAAO;IAEX,IAAI,CAACpB,oBAAoB,GAAG,KAAK;IAIjC,KAAKkB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,SAAS,IAAIgB,YAAY,GAAGJ,QAAQ,CAACX,MAAM,EAAEc,CAAC,EAAE,EAAE;MAChEE,OAAO,GAAG,IAAI,CAACrB,iBAAiB,CAACmB,CAAC,CAAC,CAACE,OAAO;MAC3C,IAAIJ,GAAG,IAAII,OAAO,EAAE;QAElB,IAAI,CAACX,IAAI,CACP,oCAAoC,GAAGO,GAAG,GAAG,WAAW,GAAGI,OAAO,EAClE,SAAS,CACV;QACDL,QAAQ,CAACM,IAAI,CAAC,IAAI,CAACtB,iBAAiB,CAACmB,CAAC,CAAC,CAACI,QAAQ,CAAC;;;IAIrDP,QAAQ,CAACQ,OAAO,CAAC,IAAI,CAAC1C,OAAO,EAAE,IAAI,CAAC;IAKpCsB,SAAS,GAAG,IAAI,CAACJ,iBAAiB,CAACK,MAAM;IAEzC,IAAID,SAAS,GAAG,CAAC,EAAE;MACjB,IAAI,CAACM,IAAI,CAAC,gCAAgC,GAAGN,SAAS,EAAE,SAAS,CAAC;MAClE,IAAI,CAACqB,mBAAmB,EAAE;KAC3B,MAAM;MACL,IAAI,CAACf,IAAI,CAAC,kCAAkC,EAAE,SAAS,CAAC;;EAE5D;EAMUe,mBAAmBA,CAAA;IAC3B,IAAI,CAAC,IAAI,CAACxB,oBAAoB,EAAE;MAC9B,IAAI,CAACA,oBAAoB,GAAG,IAAI;MAChC,IAAI,CAACyB,gBAAgB,GAAGC,UAAU,CAAC,MAAK;QACtC,IAAI,CAACZ,WAAW,EAAE;MACpB,CAAC,EAAE,IAAI,CAACvB,kBAAkB,CAAC;;EAE/B;EAYUoC,SAASA,CAAA;IACjB,IAAIC,eAAe,GAAG,IAAI;IAC1B,MAAMC,YAAY,GAAG,IAAI,CAAChC,gBAAgB,CAACO,MAAM;IAEjD,IAAI,CAACK,IAAI,CACP,sBAAsBoB,YAAY,cAAc,IAAI,CAAC9B,iBAAiB,CAACK,MAAM,EAAE,EAC/E,MAAM,CACP;IAED,IAAIyB,YAAY,GAAG,CAAC,EAAE;MACpB;;IAGF,OAAO,IAAI,CAAC9B,iBAAiB,CAACK,MAAM,GAAG,CAAC,EAAE;MACxC,IAAI,CAACK,IAAI,CAAC,0BAA0B,EAAE,SAAS,CAAC;MAChDmB,eAAe,GAAG,IAAI,CAAC7B,iBAAiB,CACtC,IAAI,CAACA,iBAAiB,CAACK,MAAM,GAAG,CAAC,CAClC;MACD,IAAI,CAAC,IAAI,CAACV,QAAQ,CAACZ,QAAQ,CAAC8C,eAAe,CAACN,QAAQ,CAAC,EAAE;QACrD,IAAI,CAACzC,OAAO,CAAC+C,eAAe,CAACN,QAAQ,CAAC;QACtC;;MAGF,IAAI,CAACvB,iBAAiB,CAAC+B,GAAG,EAAE;MAC5B,IAAI,CAACC,0BAA0B,CAC7BH,eAAe,CAACN,QAAQ,EACxBM,eAAe,CAACI,QAAQ,CACzB;MAED,MAAMC,QAAQ,GAAG,IAAI,CAACpC,gBAAgB,CAACqC,KAAK,EAAE;MAC9C,OAAOD,QAAQ,CAACE,OAAO,CAACP,eAAe,CAACN,QAAQ,CAAC;;IAGnD,IAAI,IAAI,CAACrB,IAAI,GAAG,IAAI,CAACM,OAAO,EAAE;MAC5B,IAAI,CAAC6B,eAAe,EAAE;;EAE1B;EAEUA,eAAeA,CAAA;IACvB,IAAI,CAACzC,MAAM,IAAI,CAAC;IAChB,IAAI,CAACc,IAAI,CACP,2CAA2C,IAAI,CAACR,IAAI,QAAQ,IAAI,CAACO,OAAO,QAAQ,IAAI,CAACD,OAAO,EAAE,EAC9F,SAAS,CACV;IAED,IAAI,CAACb,QAAQ,CACVf,MAAM,EAAE,CACR0D,IAAI,CAAEf,QAAQ,IAAI;MACjB,MAAMW,QAAQ,GAAG,IAAI,CAACpC,gBAAgB,CAACqC,KAAK,EAAE;MAE9C,IAAID,QAAQ,EAAE;QACZ,IAAI,CAACF,0BAA0B,CAACT,QAAQ,EAAE,CAAC,CAAC;QAC5CW,QAAQ,CAACE,OAAO,CAACb,QAAQ,CAAC;OAC3B,MAAM;QACL,IAAI,CAACgB,8BAA8B,CAAChB,QAAQ,EAAE,CAAC,CAAC;;IAEpD,CAAC,CAAC,CACDiB,KAAK,CAAEC,KAAK,IAAI;MACf,MAAMP,QAAQ,GAAG,IAAI,CAACpC,gBAAgB,CAACqC,KAAK,EAAE;MAE9C,IAAI,CAACvC,MAAM,IAAI,CAAC;MAChB,IAAI,IAAI,CAACA,MAAM,GAAG,CAAC,EAAE,IAAI,CAACA,MAAM,GAAG,CAAC;MACpC,IAAIsC,QAAQ,EAAE;QACZA,QAAQ,CAACQ,MAAM,CAACD,KAAK,CAAC;;MAExBE,OAAO,CAACC,QAAQ,CAAC,MAAK;QACpB,IAAI,CAAChB,SAAS,EAAE;MAClB,CAAC,CAAC;IACJ,CAAC,CAAC;EACN;EAEUW,8BAA8BA,CACtChB,QAAqB,EACrBU,QAAgB;IAEhB,MAAMJ,eAAe,GAAG;MACtBN,QAAQ,EAAEA,QAAQ;MAClBU,QAAQ,EAAEA,QAAQ;MAClBZ,OAAO,EAAEH,IAAI,CAACD,GAAG,EAAE,GAAG,IAAI,CAAC3B;KAC5B;IAED,IAAI,CAACU,iBAAiB,CAACsB,IAAI,CAACO,eAAe,CAAC;IAC5C,IAAI,CAACD,SAAS,EAAE;IAChB,IAAI,CAACH,mBAAmB,EAAE;EAC5B;EAEUO,0BAA0BA,CAClCT,QAAqB,EACrBU,QAAgB;IAEhB,MAAMJ,eAAe,GAAG;MACtBN,QAAQ,EAAEA,QAAQ;MAClBU,QAAQ,EAAEA;KACX;IACD,IAAI,CAAClC,aAAa,CAACuB,IAAI,CAACO,eAAe,CAAC;EAC1C;EAEUgB,cAAcA,CAAA;IACtB,IAAI1B,CAAC,EAAE2B,IAAI;IACX,IAAI,CAAC,IAAI,CAACjD,SAAS,IAAI,IAAI,CAACK,IAAI,GAAG,IAAI,CAACO,OAAO,EAAE;MAC/CqC,IAAI,GAAG,IAAI,CAACrC,OAAO,GAAG,IAAI,CAACP,IAAI;MAC/B,KAAKiB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2B,IAAI,EAAE3B,CAAC,EAAE,EAAE;QACzB,IAAI,CAACkB,eAAe,EAAE;;;EAG5B;EAUAU,OAAOA,CAAA;IACL,IAAI,IAAI,CAAClD,SAAS,EAAE;MAClB,OAAOmD,OAAO,CAACN,MAAM,CACnB,IAAI7D,KAAK,CAAC,yCAAyC,CAAC,CACrD;;IAGH,MAAMqD,QAAQ,GAAG,IAAI7D,UAAA,CAAA4E,QAAQ,EAAe;IAC5Cf,QAAQ,CAACgB,eAAe,CAAC,IAAI,CAAC3D,oBAAoB,EAAE,MAAK;MAGvD,IAAI,CAACO,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACqD,MAAM,CACjDC,OAAO,IAAKA,OAAO,KAAKlB,QAAQ,CAClC;IACH,CAAC,CAAC;IAEF,IAAI,CAACpC,gBAAgB,CAACwB,IAAI,CAACY,QAAQ,CAAC;IACpC,IAAI,CAACN,SAAS,EAAE;IAEhB,OAAOM,QAAQ,CAACmB,OAAO,EAAE;EAC3B;EAMAC,OAAOA,CAAC/B,QAAqB;IAG3B,IACE,IAAI,CAACvB,iBAAiB,CAACuD,IAAI,CACxBC,mBAAmB,IAAKA,mBAAmB,CAACjC,QAAQ,KAAKA,QAAQ,CACnE,EACD;MACA,IAAI,CAACb,IAAI,CACP,8CAA8C,GAAG,IAAI7B,KAAK,EAAE,CAAC4E,KAAK,EAClE,OAAO,CACR;MACD;;IAIF,MAAMC,KAAK,GAAG,IAAI,CAAC3D,aAAa,CAAC4D,SAAS,CACvC9B,eAAe,IAAKA,eAAe,CAACN,QAAQ,KAAKA,QAAQ,CAC3D;IACD,IAAImC,KAAK,GAAG,CAAC,EAAE;MACb,IAAI,CAAChD,IAAI,CACP,0CAA0C,GAAG,IAAI7B,KAAK,EAAE,CAAC4E,KAAK,EAC9D,OAAO,CACR;MACD;;IAEF,MAAM5B,eAAe,GAAG,IAAI,CAAC9B,aAAa,CAAC2D,KAAK,CAAC;IAGjD7B,eAAe,CAACI,QAAQ,IAAI,CAAC;IAC7B,IAAIJ,eAAe,CAACI,QAAQ,IAAI,IAAI,CAACxC,kBAAkB,EAAE;MAEvD,IAAI,CAACiB,IAAI,CACP,sCAAsC,GACpCmB,eAAe,CAACI,QAAQ,GACxB,sBAAsB,GACtB,IAAI,CAACxC,kBAAkB,EACzB,SAAS,CACV;MACD,IAAI,CAACX,OAAO,CAAC+C,eAAe,CAACN,QAAQ,CAAC;MAItC,IAAI,CAACK,SAAS,EAAE;KACjB,MAAM;MAEL,IAAI,CAAC7B,aAAa,CAAC6D,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MACnC,IAAI,CAACnB,8BAA8B,CACjCV,eAAe,CAACN,QAAQ,EACxBM,eAAe,CAACI,QAAQ,CACzB;;EAEL;EAOA,MAAMnD,OAAOA,CAACyC,QAAqB;IACjC,MAAMnB,SAAS,GAAG,IAAI,CAACJ,iBAAiB,CAACK,MAAM;IAC/C,MAAMC,KAAK,GAAG,IAAI,CAACP,aAAa,CAACM,MAAM;IAEvC,IAAI,CAACL,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACmD,MAAM,CACnDU,MAAM,IAAKA,MAAM,CAACtC,QAAQ,KAAKA,QAAQ,CACzC;IACD,IAAI,CAACxB,aAAa,GAAG,IAAI,CAACA,aAAa,CAACoD,MAAM,CAC3CU,MAAM,IAAKA,MAAM,CAACtC,QAAQ,KAAKA,QAAQ,CACzC;IAGD,IACEnB,SAAS,KAAK,IAAI,CAACJ,iBAAiB,CAACK,MAAM,IAC3CC,KAAK,KAAK,IAAI,CAACP,aAAa,CAACM,MAAM,EACnC;MACA,IAAI,CAACwC,cAAc,EAAE;MACrB;;IAGF,IAAI,CAACjD,MAAM,IAAI,CAAC;IAChB,IAAI,IAAI,CAACA,MAAM,GAAG,CAAC,EAAE,IAAI,CAACA,MAAM,GAAG,CAAC;IAEpC,IAAI;MACF,MAAM,IAAI,CAACD,QAAQ,CAACb,OAAO,CAACyC,QAAQ,CAAC;KACtC,SAAS;MACR,IAAI,CAACsB,cAAc,EAAE;MAIrB,IAAI,CAAC,IAAI,CAAChD,SAAS,EAAE;QACnB8C,OAAO,CAACC,QAAQ,CAAC,MAAK;UACpB,IAAI,CAAChB,SAAS,EAAE;QAClB,CAAC,CAAC;;;EAGR;EAKAkC,KAAKA,CAAA;IACH,IAAI,CAACpD,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC;IAG7B,IAAI,CAACb,SAAS,GAAG,IAAI;IAErB,MAAMkE,KAAK,GAAIC,QAAkB,IAAU;MAEzC,IAAI,IAAI,CAAClE,gBAAgB,CAACO,MAAM,GAAG,CAAC,EAAE;QAGpC,IAAI,CAACuB,SAAS,EAAE;QAChBD,UAAU,CAAC,MAAK;UACdoC,KAAK,CAACC,QAAQ,CAAC;QACjB,CAAC,EAAE,GAAG,CAAC;QACP;;MAIF,IAAI,IAAI,CAAChE,iBAAiB,CAACK,MAAM,KAAK,IAAI,CAACT,MAAM,EAAE;QACjD+B,UAAU,CAAC,MAAK;UACdoC,KAAK,CAACC,QAAQ,CAAC;QACjB,CAAC,EAAE,GAAG,CAAC;QACP;;MAGFA,QAAQ,EAAE;IACZ,CAAC;IAED,OAAO,IAAIhB,OAAO,CAAEZ,OAAO,IAAK2B,KAAK,CAAC3B,OAAO,CAAC,CAAC;EACjD;EAcA,MAAM6B,aAAaA,CAAA;IACjB,IAAI,CAACvD,IAAI,CAAC,8BAA8B,EAAE,MAAM,CAAC;IAEjD,IAAI,CAACT,oBAAoB,GAAG,KAAK;IACjCiE,YAAY,CAAC,IAAI,CAACxC,gBAAgB,CAAC;IAEnC,MAAMyC,SAAS,GAAG,IAAI,CAACnE,iBAAiB,CAACoE,GAAG,CACzC7C,QAAQ,IAAKA,QAAQ,CAACA,QAAQ,CAChC;IACD,MAAM8C,MAAM,GAAG,EAAE;IACjB,KAAK,MAAM9C,QAAQ,IAAI4C,SAAS,EAAE;MAChC,IAAI;QACF,MAAM,IAAI,CAACrF,OAAO,CAACyC,QAAQ,CAAC;OAC7B,CAAC,OAAO+C,EAAE,EAAE;QACX,IAAI,CAAC5D,IAAI,CAAC,6BAA6B,GAAG4D,EAAE,CAACb,KAAK,EAAE,OAAO,CAAC;QAC5DY,MAAM,CAAC/C,IAAI,CAACgD,EAAE,CAAC;;;IAInB,IAAID,MAAM,CAAChE,MAAM,GAAG,CAAC,EAAE;MACrB,MAAM,IAAI9B,gBAAA,CAAAgG,cAAc,CAACF,MAAM,CAAC;;EAEpC;;AAtgBFG,OAAA,CAAAhG,IAAA,GAAAA,IAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}