{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3001/api';\nexport const getOrdersByUser = async username => {\n  try {\n    if (!username) {\n      throw new Error('Пользователь не авторизован');\n    }\n    const url = `${API_URL}/ordertables/${username}`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching orders:', error);\n    throw error;\n  }\n};\nexport const createOrder = async (username, orderdate, orderprice, orderstatus) => {\n  try {\n    if (!username || !orderprice || !orderstatus) {\n      throw new Error('хуйня');\n    }\n    const url = `${API_URL}/ordertables`;\n    const response = await axios.post(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating order:', error);\n    throw error;\n  }\n};\nexport const allMedicines = async () => {\n  try {\n    const url = `${API_URL}/medicines`;\n    const response = await axios.get(url); // Передаем username в теле запроса\n    return response.data;\n  } catch (error) {\n    console.error('Error creating order:', error);\n    throw error;\n  }\n};\nexport const addOrderItem = async (orderid, medicineid, amount) => {\n  try {\n    const url = `${API_URL}/orderitem`;\n    const response = await axios.post(url, {\n      orderid: orderid,\n      medicineid: medicineid,\n      amount: amount\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error creating order:', error);\n    throw error;\n  }\n};\nexport const login = async (username, password) => {\n  // Добавляем параметры\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      username,\n      password\n    });\n    if (response.status === 200) {\n      localStorage.setItem('username', username); // Сохраняем имя в localStorage\n    }\n    return response;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getOrdersByUser","username","Error","url","response","get","data","error","console","createOrder","orderdate","orderprice","orderstatus","post","allMedicines","addOrderItem","orderid","medicineid","amount","login","password","status","localStorage","setItem"],"sources":["C:/Users/teply/OneDrive/Рабочий стол/web_project/client/src/components/pages/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3001/api'; \r\n\r\nexport const getOrdersByUser = async (username) => { \r\n    try {\r\n        if (!username) {\r\n            throw new Error('Пользователь не авторизован');\r\n        }\r\n        const url = `${API_URL}/ordertables/${username}`;\r\n        const response = await axios.get(url); \r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching orders:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const createOrder = async (username, orderdate, orderprice, orderstatus) => {\r\n  try {\r\n    if (!username || !orderprice||!orderstatus) {\r\n      throw new Error('хуйня');\r\n  }\r\n    const url = `${API_URL}/ordertables`;\r\n    const response = await axios.post(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating order:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const allMedicines = async () => {\r\n  try {\r\n    const url = `${API_URL}/medicines`;\r\n    const response = await axios.get(url); // Передаем username в теле запроса\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating order:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addOrderItem = async (orderid, medicineid, amount) => {\r\n  try {\r\n    const url = `${API_URL}/orderitem`;\r\n    const response = await axios.post(url, {\r\n      orderid: orderid, \r\n      medicineid: medicineid,\r\n      amount: amount\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating order:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const login = async (username, password) => { // Добавляем параметры\r\n  try {\r\n    const response = await axios.post(`${API_URL}/login`, {\r\n      username,\r\n      password\r\n    });\r\n    if (response.status === 200) {\r\n      localStorage.setItem('username', username); // Сохраняем имя в localStorage\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,eAAe,GAAG,MAAOC,QAAQ,IAAK;EAC/C,IAAI;IACA,IAAI,CAACA,QAAQ,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,MAAMC,GAAG,GAAI,GAAEJ,OAAQ,gBAAeE,QAAS,EAAC;IAChD,MAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACF,GAAG,CAAC;IACrC,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,MAAAA,CAAOR,QAAQ,EAAES,SAAS,EAAEC,UAAU,EAAEC,WAAW,KAAK;EACjF,IAAI;IACF,IAAI,CAACX,QAAQ,IAAI,CAACU,UAAU,IAAE,CAACC,WAAW,EAAE;MAC1C,MAAM,IAAIV,KAAK,CAAC,OAAO,CAAC;IAC5B;IACE,MAAMC,GAAG,GAAI,GAAEJ,OAAQ,cAAa;IACpC,MAAMK,QAAQ,GAAG,MAAMN,KAAK,CAACe,IAAI,CAACV,GAAG,CAAC;IACtC,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMX,GAAG,GAAI,GAAEJ,OAAQ,YAAW;IAClC,MAAMK,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACF,GAAG,CAAC,CAAC,CAAC;IACvC,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMQ,YAAY,GAAG,MAAAA,CAAOC,OAAO,EAAEC,UAAU,EAAEC,MAAM,KAAK;EACjE,IAAI;IACF,MAAMf,GAAG,GAAI,GAAEJ,OAAQ,YAAW;IAClC,MAAMK,QAAQ,GAAG,MAAMN,KAAK,CAACe,IAAI,CAACV,GAAG,EAAE;MACrCa,OAAO,EAAEA,OAAO;MAChBC,UAAU,EAAEA,UAAU;MACtBC,MAAM,EAAEA;IACV,CAAC,CAAC;IACF,OAAOd,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMY,KAAK,GAAG,MAAAA,CAAOlB,QAAQ,EAAEmB,QAAQ,KAAK;EAAE;EACnD,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMN,KAAK,CAACe,IAAI,CAAE,GAAEd,OAAQ,QAAO,EAAE;MACpDE,QAAQ;MACRmB;IACF,CAAC,CAAC;IACF,IAAIhB,QAAQ,CAACiB,MAAM,KAAK,GAAG,EAAE;MAC3BC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEtB,QAAQ,CAAC,CAAC,CAAC;IAC9C;IACA,OAAOG,QAAQ;EACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}