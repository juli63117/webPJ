{"ast":null,"code":"var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __markAsModule = target => __defProp(target, \"__esModule\", {\n  value: true\n});\nvar __export = (target, all) => {\n  __markAsModule(target);\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __reExport = (target, module2, desc) => {\n  if (module2 && typeof module2 === \"object\" || typeof module2 === \"function\") {\n    for (let key of __getOwnPropNames(module2)) if (!__hasOwnProp.call(target, key) && key !== \"default\") __defProp(target, key, {\n      get: () => module2[key],\n      enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable\n    });\n  }\n  return target;\n};\nvar __toModule = module2 => {\n  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, \"default\", module2 && module2.__esModule && \"default\" in module2 ? {\n    get: () => module2.default,\n    enumerable: true\n  } : {\n    value: module2,\n    enumerable: true\n  })), module2);\n};\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n__export(exports, {\n  default: () => aggregate_error_default\n});\nvar import_base_error = __toModule(require(\"./base-error\"));\nclass AggregateError extends import_base_error.default {\n  constructor(errors) {\n    super();\n    __publicField(this, \"errors\");\n    this.errors = errors;\n    this.name = \"AggregateError\";\n  }\n  toString() {\n    const message = `AggregateError of:\n${this.errors.map(error => error === this ? \"[Circular AggregateError]\" : error instanceof AggregateError ? String(error).replace(/\\n$/, \"\").replace(/^/gm, \"  \") : String(error).replace(/^/gm, \"    \").substring(2)).join(\"\\n\")}\n`;\n    return message;\n  }\n}\nvar aggregate_error_default = AggregateError;","map":{"version":3,"names":["__export","exports","default","aggregate_error_default","import_base_error","__toModule","require","AggregateError","constructor","errors","__publicField","name","toString","message","map","error","String","replace","substring","join"],"sources":["C:\\Users\\teply\\OneDrive\\Рабочий стол\\web_project\\client\\node_modules\\sequelize\\src\\errors\\aggregate-error.ts"],"sourcesContent":["import BaseError from './base-error';\n\n/**\n * A wrapper for multiple Errors\n *\n * @param errors The aggregated errors that occurred\n */\nclass AggregateError extends BaseError {\n  /** the aggregated errors that occurred */\n  readonly errors: Array<AggregateError | Error>;\n\n  constructor(errors: Array<AggregateError | Error>) {\n    super();\n    this.errors = errors;\n    this.name = 'AggregateError';\n  }\n\n  toString(): string {\n    const message = `AggregateError of:\\n${this.errors\n      .map((error: Error | AggregateError) =>\n        error === this\n          ? '[Circular AggregateError]'\n          : error instanceof AggregateError\n            ? String(error).replace(/\\n$/, '').replace(/^/gm, '  ')\n            : String(error).replace(/^/gm, '    ').substring(2)\n      )\n      .join('\\n')}\\n`;\n    return message;\n  }\n}\n\nexport default AggregateError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,QAAA,CAAAC,OAAA;EAAAC,OAAA,EAAAA,CAAA,KAAAC;AAAA;AAAA,IAAAC,iBAAA,GAAsBC,UAAA,CAAAC,OAAA;AAOtB,MAAAC,cAAA,SAA6BH,iBAAA,CAAAF,OAAA,CAAU;EAIrCM,YAAYC,MAAA,EAAuC;IACjD;IAHOC,aAAA;IAIP,KAAKD,MAAA,GAASA,MAAA;IACd,KAAKE,IAAA,GAAO;EAAA;EAGdC,SAAA,EAAmB;IACjB,MAAMC,OAAA,GAAU;AAAA,EAAuB,KAAKJ,MAAA,CACzCK,GAAA,CAAKC,KAAA,IACJA,KAAA,KAAU,OACN,8BACAA,KAAA,YAAiBR,cAAA,GACfS,MAAA,CAAOD,KAAA,EAAOE,OAAA,CAAQ,OAAO,IAAIA,OAAA,CAAQ,OAAO,QAChDD,MAAA,CAAOD,KAAA,EAAOE,OAAA,CAAQ,OAAO,QAAQC,SAAA,CAAU,IAEtDC,IAAA,CAAK;AAAA;IACR,OAAON,OAAA;EAAA;AAAA;AAIX,IAAOV,uBAAA,GAAQI,cAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}