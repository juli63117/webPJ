{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3001/api';\nexport const getOrdersByUser = async username => {\n  try {\n    if (!username) {\n      throw new Error('Пользователь не авторизован');\n    }\n    const url = `${API_URL}/ordertables/${username}`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching orders:', error);\n    throw error;\n  }\n};\nexport const findOrder = async orderid => {\n  try {\n    if (!orderid) {\n      throw new Error('Нет orderid');\n    }\n    const url = `${API_URL}/ordertables/findorder/${orderid}`; // Добавляем orderid в URL\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error finding order:', error);\n    throw error;\n  }\n};\nexport const createOrder = async (orderid, username) => {\n  try {\n    if (!username) {\n      throw new Error('Пользователь не авторизован');\n    }\n    if (!orderid) {\n      throw new Error('Нет orderid');\n    }\n    const response = await axios.post(`${API_URL}/ordertables/createorder/${orderid}/${username}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating order:', error);\n    throw error;\n  }\n};\nexport const deleteOrder = async orderid => {\n  try {\n    if (!orderid) {\n      throw new Error('Нет orderid');\n    }\n    const response = await axios.post(`${API_URL}/orderitem/delorder/${orderid}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error DELETING order:', error);\n    throw error;\n  }\n};\nexport const allMedicines = async () => {\n  try {\n    const url = `${API_URL}/medicines`;\n    const response = await axios.get(url); // Передаем username в теле запроса\n    return response.data;\n  } catch (error) {\n    console.error('Error creating order:', error);\n    throw error;\n  }\n};\nexport const addOrderItem = async (medicineid, orderid, amount) => {\n  try {\n    const url = `${API_URL}/orderitem`;\n    const response = await axios.post(url, {\n      medicineid: medicineid,\n      orderid: orderid,\n      amount: amount\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error creating order:', error);\n    throw error;\n  }\n};\nexport const login = async (username, password) => {\n  // Добавляем параметры\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      username,\n      password\n    });\n    if (response.status === 200) {\n      localStorage.setItem('username', username); // Сохраняем имя в localStorage\n    }\n    return response;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nexport const getMedicinesByTotalQuantityOrdered = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/getMedicines`);\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nexport const getMostActiveUser = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/getUsers`);\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nexport const getStatus = async username => {\n  try {\n    const response = await axios.get(`${API_URL}/users/status?username=${username}`);\n    return response.data.status;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getOrdersByUser","username","Error","url","response","get","data","error","console","findOrder","orderid","createOrder","post","deleteOrder","allMedicines","addOrderItem","medicineid","amount","login","password","status","localStorage","setItem","getMedicinesByTotalQuantityOrdered","getMostActiveUser","getStatus"],"sources":["C:/Users/teply/Downloads/Telegram Desktop/web_project/client/src/components/pages/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3001/api';\r\n\r\nexport const getOrdersByUser = async (username) => {\r\n  try {\r\n    if (!username) {\r\n      throw new Error('Пользователь не авторизован');\r\n    }\r\n    const url = `${API_URL}/ordertables/${username}`;\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching orders:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const findOrder = async (orderid) => {\r\n  try {\r\n    if (!orderid) {\r\n      throw new Error('Нет orderid');\r\n    }\r\n    const url = `${API_URL}/ordertables/findorder/${orderid}`; // Добавляем orderid в URL\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error finding order:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const createOrder = async (orderid, username) => {\r\n  try {\r\n    if (!username) {\r\n      throw new Error('Пользователь не авторизован');\r\n    }\r\n    if (!orderid) {\r\n      throw new Error('Нет orderid');\r\n    }\r\n    const response = await axios.post(`${API_URL}/ordertables/createorder/${orderid}/${username}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating order:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteOrder = async (orderid) => {\r\n  try {\r\n    if (!orderid) {\r\n      throw new Error('Нет orderid');\r\n    }\r\n    const response = await axios.post(`${API_URL}/orderitem/delorder/${orderid}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error DELETING order:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const allMedicines = async () => {\r\n  try {\r\n    const url = `${API_URL}/medicines`;\r\n    const response = await axios.get(url); // Передаем username в теле запроса\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating order:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addOrderItem = async (medicineid, orderid, amount) => {\r\n  try {\r\n    const url = `${API_URL}/orderitem`;\r\n    const response = await axios.post(url, {\r\n      medicineid: medicineid,\r\n      orderid: orderid,\r\n      amount: amount\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating order:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const login = async (username, password) => { // Добавляем параметры\r\n  try {\r\n    const response = await axios.post(`${API_URL}/login`, {\r\n      username,\r\n      password\r\n    });\r\n    if (response.status === 200) {\r\n      localStorage.setItem('username', username); // Сохраняем имя в localStorage\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport const getMedicinesByTotalQuantityOrdered = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/getMedicines`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport const getMostActiveUser = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/getUsers`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport const getStatus = async (username) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/users/status?username=${username}`);\r\n    return response.data.status;\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}