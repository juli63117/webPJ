{"ast":null,"code":"\"use strict\";\n\nconst stores = /* @__PURE__ */new Map();\nmodule.exports = dialect => {\n  if (!stores.has(dialect)) {\n    stores.set(dialect, /* @__PURE__ */new Map());\n  }\n  return {\n    clear() {\n      stores.get(dialect).clear();\n    },\n    refresh(dataType) {\n      for (const type of dataType.types[dialect]) {\n        stores.get(dialect).set(type, dataType.parse);\n      }\n    },\n    get(type) {\n      return stores.get(dialect).get(type);\n    }\n  };\n};","map":{"version":3,"names":["stores","Map","module","exports","dialect","has","set","clear","get","refresh","dataType","type","types","parse"],"sources":["C:\\Users\\teply\\OneDrive\\Рабочий стол\\web_project\\client\\node_modules\\sequelize\\src\\dialects\\parserStore.js"],"sourcesContent":["'use strict';\n\nconst stores = new Map();\n\nmodule.exports = dialect => {\n  if (!stores.has(dialect)) {\n    stores.set(dialect, new Map());\n  }\n\n  return {\n    clear() {\n      stores.get(dialect).clear();\n    },\n    refresh(dataType) {\n      for (const type of dataType.types[dialect]) {\n        stores.get(dialect).set(type, dataType.parse);\n      }\n    },\n    get(type) {\n      return stores.get(dialect).get(type);\n    }\n  };\n};\n"],"mappings":";;AAEA,MAAMA,MAAA,GAAS,mBAAIC,GAAA;AAEnBC,MAAA,CAAOC,OAAA,GAAUC,OAAA,IAAW;EAC1B,IAAI,CAACJ,MAAA,CAAOK,GAAA,CAAID,OAAA,GAAU;IACxBJ,MAAA,CAAOM,GAAA,CAAIF,OAAA,EAAS,mBAAIH,GAAA;EAAA;EAG1B,OAAO;IACLM,MAAA,EAAQ;MACNP,MAAA,CAAOQ,GAAA,CAAIJ,OAAA,EAASG,KAAA;IAAA;IAEtBE,QAAQC,QAAA,EAAU;MAChB,WAAWC,IAAA,IAAQD,QAAA,CAASE,KAAA,CAAMR,OAAA,GAAU;QAC1CJ,MAAA,CAAOQ,GAAA,CAAIJ,OAAA,EAASE,GAAA,CAAIK,IAAA,EAAMD,QAAA,CAASG,KAAA;MAAA;IAAA;IAG3CL,IAAIG,IAAA,EAAM;MACR,OAAOX,MAAA,CAAOQ,GAAA,CAAIJ,OAAA,EAASI,GAAA,CAAIG,IAAA;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}