{"ast":null,"code":"\"use strict\";\n\nconst _ = require(\"lodash\");\nfunction stringifyRangeBound(bound) {\n  if (bound === null) {\n    return \"\";\n  }\n  if (bound === Infinity || bound === -Infinity) {\n    return bound.toString().toLowerCase();\n  }\n  return JSON.stringify(bound);\n}\nfunction parseRangeBound(bound, parseType) {\n  if (!bound) {\n    return null;\n  }\n  if (bound === \"infinity\") {\n    return Infinity;\n  }\n  if (bound === \"-infinity\") {\n    return -Infinity;\n  }\n  return parseType(bound);\n}\nfunction stringify(data) {\n  if (data === null) return null;\n  if (!Array.isArray(data)) throw new Error(\"range must be an array\");\n  if (!data.length) return \"empty\";\n  if (data.length !== 2) throw new Error(\"range array length must be 0 (empty) or 2 (lower and upper bounds)\");\n  if (Object.prototype.hasOwnProperty.call(data, \"inclusive\")) {\n    if (data.inclusive === false) data.inclusive = [false, false];else if (!data.inclusive) data.inclusive = [true, false];else if (data.inclusive === true) data.inclusive = [true, true];\n  } else {\n    data.inclusive = [true, false];\n  }\n  _.each(data, (value, index) => {\n    if (_.isObject(value)) {\n      if (Object.prototype.hasOwnProperty.call(value, \"inclusive\")) data.inclusive[index] = !!value.inclusive;\n      if (Object.prototype.hasOwnProperty.call(value, \"value\")) data[index] = value.value;\n    }\n  });\n  const lowerBound = stringifyRangeBound(data[0]);\n  const upperBound = stringifyRangeBound(data[1]);\n  return `${(data.inclusive[0] ? \"[\" : \"(\") + lowerBound},${upperBound}${data.inclusive[1] ? \"]\" : \")\"}`;\n}\nexports.stringify = stringify;\nfunction parse(value, parser) {\n  if (value === null) return null;\n  if (value === \"empty\") {\n    return [];\n  }\n  let result = value.substring(1, value.length - 1).split(\",\", 2);\n  if (result.length !== 2) return value;\n  result = result.map((item, index) => {\n    return {\n      value: parseRangeBound(item, parser),\n      inclusive: index === 0 ? value[0] === \"[\" : value[value.length - 1] === \"]\"\n    };\n  });\n  return result;\n}\nexports.parse = parse;","map":{"version":3,"names":["_","require","stringifyRangeBound","bound","Infinity","toString","toLowerCase","JSON","stringify","parseRangeBound","parseType","data","Array","isArray","Error","length","Object","prototype","hasOwnProperty","call","inclusive","each","value","index","isObject","lowerBound","upperBound","exports","parse","parser","result","substring","split","map","item"],"sources":["C:\\Users\\teply\\OneDrive\\Рабочий стол\\web_project\\client\\node_modules\\sequelize\\src\\dialects\\postgres\\range.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\n\nfunction stringifyRangeBound(bound) {\n  if (bound === null) {\n    return '' ;\n  }\n  if (bound === Infinity || bound === -Infinity) {\n    return bound.toString().toLowerCase();\n  }\n  return JSON.stringify(bound);\n}\n\nfunction parseRangeBound(bound, parseType) {\n  if (!bound) {\n    return null;\n  }\n  if (bound === 'infinity') {\n    return Infinity;\n  }\n  if (bound === '-infinity') {\n    return -Infinity;\n  }\n  return parseType(bound);\n\n}\n\nfunction stringify(data) {\n  if (data === null) return null;\n\n  if (!Array.isArray(data)) throw new Error('range must be an array');\n  if (!data.length) return 'empty';\n  if (data.length !== 2) throw new Error('range array length must be 0 (empty) or 2 (lower and upper bounds)');\n\n  if (Object.prototype.hasOwnProperty.call(data, 'inclusive')) {\n    if (data.inclusive === false) data.inclusive = [false, false];\n    else if (!data.inclusive) data.inclusive = [true, false];\n    else if (data.inclusive === true) data.inclusive = [true, true];\n  } else {\n    data.inclusive = [true, false];\n  }\n\n  _.each(data, (value, index) => {\n    if (_.isObject(value)) {\n      if (Object.prototype.hasOwnProperty.call(value, 'inclusive')) data.inclusive[index] = !!value.inclusive;\n      if (Object.prototype.hasOwnProperty.call(value, 'value')) data[index] = value.value;\n    }\n  });\n\n  const lowerBound = stringifyRangeBound(data[0]);\n  const upperBound = stringifyRangeBound(data[1]);\n\n  return `${(data.inclusive[0] ? '[' : '(') + lowerBound},${upperBound}${data.inclusive[1] ? ']' : ')'}`;\n}\nexports.stringify = stringify;\n\nfunction parse(value, parser) {\n  if (value === null) return null;\n  if (value === 'empty') {\n    return [];\n  }\n\n  let result = value\n    .substring(1, value.length - 1)\n    .split(',', 2);\n\n  if (result.length !== 2) return value;\n\n  result = result.map((item, index) => {\n    return {\n      value: parseRangeBound(item, parser),\n      inclusive: index === 0 ? value[0] === '[' : value[value.length - 1] === ']'\n    };\n  });\n\n  return result;\n}\nexports.parse = parse;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}