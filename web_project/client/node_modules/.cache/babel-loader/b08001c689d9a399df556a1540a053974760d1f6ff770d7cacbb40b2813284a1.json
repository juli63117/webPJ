{"ast":null,"code":"\"use strict\";\n\nconst _ = require(\"lodash\");\nconst {\n  AbstractDialect\n} = require(\"../abstract\");\nconst {\n  OracleConnectionManager\n} = require(\"./connection-manager\");\nconst {\n  OracleQuery\n} = require(\"./query\");\nconst {\n  OracleQueryGenerator\n} = require(\"./query-generator\");\nconst DataTypes = require(\"../../data-types\").oracle;\nconst {\n  OracleQueryInterface\n} = require(\"./query-interface\");\nclass OracleDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new OracleConnectionManager(this, sequelize);\n    this.connectionManager.initPools();\n    this.queryGenerator = new OracleQueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new OracleQueryInterface(sequelize, this.queryGenerator);\n  }\n}\nOracleDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  \"VALUES ()\": true,\n  \"LIMIT ON UPDATE\": true,\n  IGNORE: \" IGNORE\",\n  lock: true,\n  lockOuterJoinFailure: true,\n  forShare: \"FOR UPDATE\",\n  skipLocked: true,\n  index: {\n    collate: false,\n    length: false,\n    parser: false,\n    type: false,\n    using: false\n  },\n  constraints: {\n    restrict: false\n  },\n  returnValues: false,\n  returnIntoValues: true,\n  \"ORDER NULLS\": true,\n  schemas: true,\n  updateOnDuplicate: false,\n  indexViaAlter: false,\n  NUMERIC: true,\n  JSON: true,\n  upserts: true,\n  bulkDefault: true,\n  topLevelOrderByRequired: true,\n  GEOMETRY: false\n});\nOracleDialect.prototype.defaultVersion = \"18.0.0\";\nOracleDialect.prototype.Query = OracleQuery;\nOracleDialect.prototype.queryGenerator = OracleQueryGenerator;\nOracleDialect.prototype.DataTypes = DataTypes;\nOracleDialect.prototype.name = \"oracle\";\nOracleDialect.prototype.TICK_CHAR = '\"';\nOracleDialect.prototype.TICK_CHAR_LEFT = OracleDialect.prototype.TICK_CHAR;\nOracleDialect.prototype.TICK_CHAR_RIGHT = OracleDialect.prototype.TICK_CHAR;\nmodule.exports = OracleDialect;","map":{"version":3,"names":["_","require","AbstractDialect","OracleConnectionManager","OracleQuery","OracleQueryGenerator","DataTypes","oracle","OracleQueryInterface","OracleDialect","constructor","sequelize","connectionManager","initPools","queryGenerator","_dialect","queryInterface","prototype","supports","merge","cloneDeep","IGNORE","lock","lockOuterJoinFailure","forShare","skipLocked","index","collate","length","parser","type","using","constraints","restrict","returnValues","returnIntoValues","schemas","updateOnDuplicate","indexViaAlter","NUMERIC","JSON","upserts","bulkDefault","topLevelOrderByRequired","GEOMETRY","defaultVersion","Query","name","TICK_CHAR","TICK_CHAR_LEFT","TICK_CHAR_RIGHT","module","exports"],"sources":["C:\\Users\\teply\\OneDrive\\Рабочий стол\\web_project\\client\\node_modules\\sequelize\\src\\dialects\\oracle\\index.js"],"sourcesContent":["// Copyright (c) 2022, Oracle and/or its affiliates. All rights reserved\n\n'use strict';\n\nconst _ = require('lodash');\nconst { AbstractDialect } = require('../abstract');\nconst { OracleConnectionManager } = require('./connection-manager');\nconst { OracleQuery } = require('./query');\nconst { OracleQueryGenerator } = require('./query-generator');\nconst DataTypes = require('../../data-types').oracle;\nconst { OracleQueryInterface } = require('./query-interface');\n\nclass OracleDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new OracleConnectionManager(this, sequelize);\n    this.connectionManager.initPools();\n    this.queryGenerator = new OracleQueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new OracleQueryInterface(sequelize, this.queryGenerator);\n  }\n}\n\nOracleDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  'VALUES ()': true,\n  'LIMIT ON UPDATE': true,\n  IGNORE: ' IGNORE',\n  lock: true,\n  lockOuterJoinFailure: true,\n  forShare: 'FOR UPDATE',\n  skipLocked: true,\n  index: {\n    collate: false,\n    length: false,\n    parser: false,\n    type: false,\n    using: false\n  },\n  constraints: {\n    restrict: false\n  },\n  returnValues: false,\n  returnIntoValues: true,\n  'ORDER NULLS': true,\n  schemas: true,\n  updateOnDuplicate: false,\n  indexViaAlter: false,\n  NUMERIC: true,\n  JSON: true,\n  upserts: true,\n  bulkDefault: true,\n  topLevelOrderByRequired: true,\n  GEOMETRY: false\n});\n\nOracleDialect.prototype.defaultVersion = '18.0.0';\nOracleDialect.prototype.Query = OracleQuery;\nOracleDialect.prototype.queryGenerator = OracleQueryGenerator;\nOracleDialect.prototype.DataTypes = DataTypes;\nOracleDialect.prototype.name = 'oracle';\nOracleDialect.prototype.TICK_CHAR = '\"';\nOracleDialect.prototype.TICK_CHAR_LEFT = OracleDialect.prototype.TICK_CHAR;\nOracleDialect.prototype.TICK_CHAR_RIGHT = OracleDialect.prototype.TICK_CHAR;\n\nmodule.exports = OracleDialect;\n"],"mappings":";;AAIA,MAAMA,CAAA,GAAIC,OAAA,CAAQ;AAClB,MAAM;EAAEC;AAAA,IAAoBD,OAAA,CAAQ;AACpC,MAAM;EAAEE;AAAA,IAA4BF,OAAA,CAAQ;AAC5C,MAAM;EAAEG;AAAA,IAAgBH,OAAA,CAAQ;AAChC,MAAM;EAAEI;AAAA,IAAyBJ,OAAA,CAAQ;AACzC,MAAMK,SAAA,GAAYL,OAAA,CAAQ,oBAAoBM,MAAA;AAC9C,MAAM;EAAEC;AAAA,IAAyBP,OAAA,CAAQ;AAEzC,MAAAQ,aAAA,SAA4BP,eAAA,CAAgB;EAC1CQ,YAAYC,SAAA,EAAW;IACrB;IACA,KAAKA,SAAA,GAAYA,SAAA;IACjB,KAAKC,iBAAA,GAAoB,IAAIT,uBAAA,CAAwB,MAAMQ,SAAA;IAC3D,KAAKC,iBAAA,CAAkBC,SAAA;IACvB,KAAKC,cAAA,GAAiB,IAAIT,oBAAA,CAAqB;MAC7CU,QAAA,EAAU;MACVJ;IAAA;IAEF,KAAKK,cAAA,GAAiB,IAAIR,oBAAA,CAAqBG,SAAA,EAAW,KAAKG,cAAA;EAAA;AAAA;AAInEL,aAAA,CAAcQ,SAAA,CAAUC,QAAA,GAAWlB,CAAA,CAAEmB,KAAA,CAAMnB,CAAA,CAAEoB,SAAA,CAAUlB,eAAA,CAAgBe,SAAA,CAAUC,QAAA,GAAW;EAC1F,aAAa;EACb,mBAAmB;EACnBG,MAAA,EAAQ;EACRC,IAAA,EAAM;EACNC,oBAAA,EAAsB;EACtBC,QAAA,EAAU;EACVC,UAAA,EAAY;EACZC,KAAA,EAAO;IACLC,OAAA,EAAS;IACTC,MAAA,EAAQ;IACRC,MAAA,EAAQ;IACRC,IAAA,EAAM;IACNC,KAAA,EAAO;EAAA;EAETC,WAAA,EAAa;IACXC,QAAA,EAAU;EAAA;EAEZC,YAAA,EAAc;EACdC,gBAAA,EAAkB;EAClB,eAAe;EACfC,OAAA,EAAS;EACTC,iBAAA,EAAmB;EACnBC,aAAA,EAAe;EACfC,OAAA,EAAS;EACTC,IAAA,EAAM;EACNC,OAAA,EAAS;EACTC,WAAA,EAAa;EACbC,uBAAA,EAAyB;EACzBC,QAAA,EAAU;AAAA;AAGZnC,aAAA,CAAcQ,SAAA,CAAU4B,cAAA,GAAiB;AACzCpC,aAAA,CAAcQ,SAAA,CAAU6B,KAAA,GAAQ1C,WAAA;AAChCK,aAAA,CAAcQ,SAAA,CAAUH,cAAA,GAAiBT,oBAAA;AACzCI,aAAA,CAAcQ,SAAA,CAAUX,SAAA,GAAYA,SAAA;AACpCG,aAAA,CAAcQ,SAAA,CAAU8B,IAAA,GAAO;AAC/BtC,aAAA,CAAcQ,SAAA,CAAU+B,SAAA,GAAY;AACpCvC,aAAA,CAAcQ,SAAA,CAAUgC,cAAA,GAAiBxC,aAAA,CAAcQ,SAAA,CAAU+B,SAAA;AACjEvC,aAAA,CAAcQ,SAAA,CAAUiC,eAAA,GAAkBzC,aAAA,CAAcQ,SAAA,CAAU+B,SAAA;AAElEG,MAAA,CAAOC,OAAA,GAAU3C,aAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}